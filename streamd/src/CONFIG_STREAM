##########################################################################
# This is the build configuration file of StreamDevice.
#
# (C) 2007,2018 Dirk Zimoch (dirk.zimoch@psi.ch)
#
# This file is part of StreamDevice.
#
# StreamDevice is free software: You can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# StreamDevice is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with StreamDevice. If not, see https://www.gnu.org/licenses/.
#########################################################################/

# You may add more record interfaces
# This requires the naming conventions
# dev$(RECORDTYPE)Stream.c

RECORDTYPES += ao ai
RECORDTYPES += bo bi
RECORDTYPES += mbbo mbbi
RECORDTYPES += mbboDirect mbbiDirect
RECORDTYPES += longout longin
RECORDTYPES += stringout stringin
RECORDTYPES += waveform
RECORDTYPES += aai aao

ifdef BASE_3_14
RECORDTYPES += calcout
endif

ifdef BASE_3_15
RECORDTYPES += lsi lso
endif

ifdef BASE_3_16
RECORDTYPES += int64in int64out
endif

# Do you have synApps and want support for scalcout?
# Then define CALC or SYNAPPS in your RELEASE file
# pointing to the 'calc' module of synApps.
# Older 'calc' versions have a cross reference on
# 'sscan' and/or 'genSub', so you may have to build them first.
# Up to version 2-6 (synApps 5-1) the 'calc' module needs a fix.
# See doc/scalcout.html for details.
ifneq ($(words $(CALC) $(SYNAPPS)), 0)
RECORDTYPES += scalcout
endif

# You may add more bus interfaces
# This requires the naming convention
# $(BUS)Interface.cc
# asynDriver interface is added automatically
# if ASYN is defined in your RELEASE file.

BUSSES += Debug
BUSSES += Dummy
ifdef ASYN
BUSSES += AsynDriver
endif

# You may add more format converters
# This requires the naming convention
# $(FORMAT)Converter.cc

FORMATS += Enum
FORMATS += BCD
FORMATS += Raw
FORMATS += RawFloat
FORMATS += Binary
FORMATS += Checksum
FORMATS += MantissaExponent
FORMATS += Timestamp

# Want Perl regular expression matching?
# If PCRE is installed at the same location for all
# architectures, define the following variable in your
# RELEASE file. If the PCRE installation is different
# (or even missing) for some architectures, use
# separate RELEASE.Common.<arch> files.
# If PCRE is an EPICS-like project define
# PCRE=<location of the PCRE project>
# Else define
# PCRE_INCLUDE=<location of the pcre.h file>
# PCRE_LIB=<location of the PCRE library>

ifneq ($(words $(PCRE) $(PCRE_LIB) $(PCRE_INCLUDE)),0)
FORMATS += Regexp
endif

# Want a loadable module?
# For Tornado 2.0.2, a fix is needed in the
# registerRecordDeviceDriver.pl script in base:
# at the end replace the line "IoccrfReg iocshReg;"
# by "static IoccrfReg iocshReg;"
# LOADABLE_MODULE = YES

# Sources of Stream Kernel
# Do not modify

STREAM_SRCS += StreamVersion.c
STREAM_SRCS += StreamBuffer.cc
STREAM_SRCS += StreamError.cc
STREAM_SRCS += StreamProtocol.cc
STREAM_SRCS += StreamFormatConverter.cc
STREAM_SRCS += StreamCore.cc
STREAM_SRCS += StreamBusInterface.cc
STREAM_SRCS += StreamEpics.cc
